网址：https://leetcode.com/problems/sort-colors/description/
题目：
Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Note:
You are not suppose to use the library's sort function for this problem.

click to show follow up.


解释：分类，把相同的放在一起。
思考：使用三路快排，画图分析。
注意：应该画图来帮助分析，三路快排的思路是非常基础而且重要的，希望要引起重视。
时间：2018 年 3 月 22 日


版本1：分别统计个数，然后逐个赋值，感觉有些麻烦，但是思路还是很清晰的。

class Solution:
    def sortColors(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        counter = [0] * 3
        for num in nums:
            counter[num] += 1

        i = 0
        for _ in range(counter[0]):
            nums[i] = 0
            i += 1
        for _ in range(counter[1]):
            nums[i] = 1
            i += 1
        for _ in range(counter[2]):
            nums[i] = 2
            i += 1

与上一个版本的一个等价写法：

class Solution:
    def sortColors(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        counter = [0] * 3
        for num in nums:
            counter[num] += 1
        i = 0
        for idx, count in enumerate(counter):
            for _ in range(count):
                nums[i] = idx
                i += 1

下面，利用三路快排的思路来写一下：


class Solution:
    def sortColors(self, nums):
        n = len(nums)
        zero = 0
        i = 0
        two = n
        while i < two:
            if nums[i] == 0:
                self._swap(nums, zero, i)
                zero += 1
                i += 1
            elif nums[i] == 1:
                i += 1
            else:
                two -= 1
                self._swap(nums, two, i)

    def _swap(self, nums, idx_1, idx_2):

        if idx_1 == idx_2:
            return
        temp = nums[idx_1]
        nums[idx_1] = nums[idx_2]
        nums[idx_2] = temp
