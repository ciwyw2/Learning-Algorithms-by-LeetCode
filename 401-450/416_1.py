# @Time    : 18/4/12 下午4:13
# @Author  : liweiwei1419
# @Site    : http://www.liwei.party/
# @Contact : liweiwei1419@gmail.com


class Solution:

    def canPartition(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """

        l = len(nums)
        if l == 0:
            return False
        s = sum(nums)
        half = s // 2
        if s % 2 == 1:
            return False

        dp = [[0 for _ in range(half + 1)] for _ in range(l)]

        for i in range(half + 1):
            dp[0][i] = False if nums[0] != i else True
        for i in range(1, l):
            for j in range(half + 1):
                dp[i][j] = dp[i - 1][j] or dp[i - 1][j - nums[i]]

        return dp[-1][-1]


if __name__ == '__main__':
    # nums = [1, 5, 11, 5]
    # nums = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
    nums = [91, 29, 92, 14, 53, 27, 96, 97, 58, 76, 56, 51, 68, 18, 37, 98, 30, 37, 25, 65, 95, 22, 34, 25, 29, 37, 54,
            34, 43,
            18, 65, 31, 21, 91, 9, 57, 13, 72, 31, 26, 36, 77, 85, 70, 5, 72, 93, 39, 46, 50, 22, 16, 6, 67, 17, 41, 42,
            10,
            56, 66, 69, 53, 79, 46, 14, 34, 80, 31, 86, 78, 35, 64, 75, 88, 58, 26, 56, 91, 84, 38, 44, 19, 49, 8, 4,
            78, 11,
            13, 10, 56, 72, 97, 25, 62, 97, 80, 20, 63, 5, 27]
    s = Solution()
    res = s.canPartition(nums)
    print(res)
